<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:doc="clr-namespace:System.Windows.Documents;assembly=PresentationFramework"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" 
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
    <!-- Default Colours -->
    <Color x:Key="BorderDefault">#ffefefef</Color>
    <Color x:Key="Foreground">#ff000000</Color>
    <Color x:Key="Link">#FF788FFB</Color>

    <Style TargetType="{x:Type Image}">
        <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor" />
    </Style>

    <SolidColorBrush x:Key="DarkGrayGradientBrush" Color="#FF222222"/>
    <SolidColorBrush x:Key="BlueGradientBrush" Color="#FF1F668B"/>
    <LinearGradientBrush x:Key="MenuBackground" EndPoint="0,1" StartPoint="0,0">
    	<GradientStop Color="#F6F6F6" Offset="0.25"/>
    	<GradientStop Color="#EAE8E8" Offset="0.25"/>
    	<GradientStop Color="#DCD9D9" Offset="0.8"/>
    	<GradientStop Color="White" Offset="1"/>
    </LinearGradientBrush>
    <Style TargetType="{x:Type Menu}">
    	<Setter Property="Background" Value="{StaticResource MenuBackground}"/>
    	<Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
    	<Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
    	<Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
    	<Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
    	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type Menu}">
    				<Border SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Background="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}">
    					<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
    				</Border>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <LinearGradientBrush x:Key="ToolBarHorizontalBackground" EndPoint="0,1" StartPoint="0,0">
    	<GradientStop Color="#FFFFFF" Offset="0"/>
    	<GradientStop Color="#FFFBFF" Offset="0.5"/>
    	<GradientStop Color="#F7F7F7" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ToolBarToggleButtonVerticalBackground" EndPoint="1,0" StartPoint="0,0">
    	<GradientStop Color="#ECECEC" Offset="0"/>
    	<GradientStop Color="#DDDDDD" Offset="0.5"/>
    	<GradientStop Color="#A0A0A0" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ToolBarButtonHover" Color="#C2E0FF"/>
    <SolidColorBrush x:Key="ToolBarGripper" Color="#C6C3C6"/>
    <Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
    	<Setter Property="Background" Value="{StaticResource ToolBarToggleButtonVerticalBackground}"/>
    	<Setter Property="MinHeight" Value="0"/>
    	<Setter Property="MinWidth" Value="0"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type ToggleButton}">
    				<Border x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" CornerRadius="0,0,3,3">
    					<Canvas HorizontalAlignment="Right" Margin="2,7,2,2" VerticalAlignment="Bottom" Width="7" Height="6" SnapsToDevicePixels="true">
    						<Path Stroke="White" Data="M 1.5 1 L 1.5 6"/>
    						<Path Stroke="{TemplateBinding Foreground}" Data="M 0.5 0 L 0.5 5"/>
    						<Path Fill="White" Data="M 3.5 0.5 L 7 3.5 L 4 6.5 Z"/>
    						<Path Fill="{TemplateBinding Foreground}" Data="M 3 -0.5 L 6 2.5 L 3 5.5 Z"/>
    					</Canvas>
    				</Border>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsMouseOver" Value="true">
    						<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
    					</Trigger>
    					<Trigger Property="IsKeyboardFocused" Value="true">
    						<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
    					</Trigger>
    					<Trigger Property="IsEnabled" Value="false">
    						<Setter Property="Foreground" Value="{StaticResource ToolBarGripper}"/>
    					</Trigger>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <LinearGradientBrush x:Key="ToolBarVerticalBackground" EndPoint="1,0" StartPoint="0,0">
    	<GradientStop Color="#FFFFFF" Offset="0"/>
    	<GradientStop Color="#FFFBFF" Offset="0.5"/>
    	<GradientStop Color="#F7F7F7" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ToolBarToggleButtonHorizontalBackground" EndPoint="0,1" StartPoint="0,0">
    	<GradientStop Color="#ECECEC" Offset="0"/>
    	<GradientStop Color="#DDDDDD" Offset="0.5"/>
    	<GradientStop Color="#A0A0A0" Offset="1"/>
    </LinearGradientBrush>
    <Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
    	<Setter Property="Background" Value="{StaticResource ToolBarToggleButtonHorizontalBackground}"/>
    	<Setter Property="MinHeight" Value="0"/>
    	<Setter Property="MinWidth" Value="0"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type ToggleButton}">
    				<Border x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" CornerRadius="0,3,3,0">
    					<Canvas HorizontalAlignment="Right" Margin="7,2,2,2" VerticalAlignment="Bottom" Width="6" Height="7" SnapsToDevicePixels="true">
    						<Path Stroke="White" Data="M 1 1.5 L 6 1.5"/>
    						<Path Stroke="{TemplateBinding Foreground}" Data="M 0 0.5 L 5 0.5"/>
    						<Path Fill="White" Data="M 0.5 4 L 6.5 4 L 3.5 7 Z"/>
    						<Path Fill="{TemplateBinding Foreground}" Data="M -0.5 3 L 5.5 3 L 2.5 6 Z"/>
    					</Canvas>
    				</Border>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsMouseOver" Value="true">
    						<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
    					</Trigger>
    					<Trigger Property="IsKeyboardFocused" Value="true">
    						<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
    					</Trigger>
    					<Trigger Property="IsEnabled" Value="false">
    						<Setter Property="Foreground" Value="{StaticResource ToolBarGripper}"/>
    					</Trigger>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <SolidColorBrush x:Key="ToolBarSubMenuBackground" Color="#FDFDFD"/>
    <SolidColorBrush x:Key="ToolBarMenuBorder" Color="#808080"/>
    <Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type Thumb}">
    				<Border SnapsToDevicePixels="True" Background="Transparent" Padding="{TemplateBinding Padding}">
    					<Rectangle>
    						<Rectangle.Fill>
    							<DrawingBrush TileMode="Tile" Viewbox="0,0,4,4" ViewboxUnits="Absolute" Viewport="0,0,4,4" ViewportUnits="Absolute">
    								<DrawingBrush.Drawing>
    									<DrawingGroup>
    										<GeometryDrawing Brush="White" Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z"/>
    										<GeometryDrawing Brush="{StaticResource ToolBarGripper}" Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z"/>
    									</DrawingGroup>
    								</DrawingBrush.Drawing>
    							</DrawingBrush>
    						</Rectangle.Fill>
    					</Rectangle>
    				</Border>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsMouseOver" Value="true">
    						<Setter Property="Cursor" Value="SizeAll"/>
    					</Trigger>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style TargetType="{x:Type ToolBar}">
    	<Setter Property="Background" Value="{StaticResource ToolBarHorizontalBackground}"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type ToolBar}">
    				<Grid x:Name="Grid" Margin="1" SnapsToDevicePixels="true" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
    					<Grid x:Name="OverflowGrid" HorizontalAlignment="Right"/>
    					<Border x:Name="MainPanelBorder" Margin="0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3,3,3,3" Padding="{TemplateBinding Padding}">
    						<DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
    							<Thumb x:Name="ToolBarThumb" Margin="-3,-1,0,0" Style="{StaticResource ToolBarThumbStyle}" Width="10" Padding="6,5,1,6" d:IsHidden="True" d:IsLocked="True"/>
    							<ContentPresenter x:Name="ToolBarHeader" HorizontalAlignment="Center" Margin="4,0,4,0" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header"/>
    							<ToolBarPanel x:Name="PART_ToolBarPanel" Margin="0,1,2,2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" IsItemsHost="true"/>
    						</DockPanel>
    					</Border>
    				</Grid>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsOverflowOpen" Value="true">
    						<Setter Property="IsEnabled" TargetName="ToolBarThumb" Value="false"/>
    					</Trigger>
    					<Trigger Property="Header" Value="{x:Null}">
    						<Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed"/>
    					</Trigger>
    					<Trigger Property="ToolBarTray.IsLocked" Value="true">
    						<Setter Property="Visibility" TargetName="ToolBarThumb" Value="Collapsed"/>
    					</Trigger>
    					<Trigger Property="Orientation" Value="Vertical">
    						<Setter Property="Margin" TargetName="Grid" Value="1,3,1,1"/>
    						<Setter Property="Height" TargetName="ToolBarThumb" Value="10"/>
    						<Setter Property="Width" TargetName="ToolBarThumb" Value="Auto"/>
    						<Setter Property="Margin" TargetName="ToolBarThumb" Value="-1,-3,0,0"/>
    						<Setter Property="Padding" TargetName="ToolBarThumb" Value="5,6,6,1"/>
    						<Setter Property="Margin" TargetName="ToolBarHeader" Value="0,0,0,4"/>
    						<Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2"/>
    						<Setter Property="DockPanel.Dock" TargetName="ToolBarThumb" Value="Top"/>
    						<Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top"/>
    						<Setter Property="HorizontalAlignment" TargetName="OverflowGrid" Value="Stretch"/>
    						<Setter Property="VerticalAlignment" TargetName="OverflowGrid" Value="Bottom"/>
    						<Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11"/>
    						<Setter Property="Background" Value="{StaticResource ToolBarVerticalBackground}"/>
    					</Trigger>
    					<Trigger Property="IsEnabled" Value="false">
    						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
    					</Trigger>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    
	
	<Style x:Key="header" TargetType="{x:Type TextBlock}">
    	<Setter Property="FontSize" Value="16"/>
    	<Setter Property="FontWeight" Value="Bold"/>
    </Style>    

</ResourceDictionary>