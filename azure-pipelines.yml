trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'any cpu'
  buildConfiguration: 'release'

resources:
- repo: self

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core sdk 3.1'
  inputs:
    version: 3.1.x

- task: UseDotNet@2
  displayName: 'Use .NET Core sdk 2.2'
  inputs:
    version: 2.2.x

- task: NuGetToolInstaller@0
  displayName: 'Use NuGet'

- task: NuGetCommand@2

- task: VSBuild@1
  displayName: 'Build solution **\*.sln'
  inputs:
    solution: '**\*.sln'
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'

- script: |
    echo Making published directories
    mkdir published\desktop
    mkdir published\exporter
    mkdir published\api

    echo Publishing "$(System.DefaultWorkingDirectory)\Source\TheBoxSoftware.DeveloperSuite.LiveDocumenter.Exporter\TheBoxSoftware.DeveloperSuite.LiveDocumenter.Exporter.csproj""
    cd "Source\TheBoxSoftware.DeveloperSuite.LiveDocumenter.Exporter"
    dotnet publish -c $(BuildConfiguration) -f net471 -o "$(System.DefaultWorkingDirectory)\published\exporter\net471"
    dotnet publish -c $(BuildConfiguration) -f netcoreapp2.2 -o "$(System.DefaultWorkingDirectory)\published\exporter\netcoreapp2.2"
    cd "$(System.DefaultWorkingDirectory)"

    echo Copying desktop application to release directory
    xcopy /s "Source\TheBoxSoftware.DeveloperSuite.LiveDocumenter\bin\$(BuildConfiguration)" "$(System.DefaultWorkingDirectory)\published\desktop"

    echo Release API
    cd "Source\TheBoxSoftware.API.LiveDocumenter\"
    dotnet build -c $(BuildConfiguration) -o "$(System.DefaultWorkingDirectory)\published\api"
    cd "$(System.DefaultWorkingDirectory)"
  displayName: 'Publish .NET Core Applications'

- task: CopyFiles@2
  displayName: 'Copy Files to: $(System.DefaultWorkingDirectory)\Source\testoutput\'
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)'
    Contents: '**\Release\**\DocumentationTest.dll'
    TargetFolder: '$(System.DefaultWorkingDirectory)\Source\testoutput\'
    flattenFolders: true

- task: VSTest@2
  displayName: 'VsTest - testAssemblies'
  inputs:
    testAssemblyVer2: |
     **\$(BuildConfiguration)\**\*Tests.dll
     !**\obj\**
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'

- task: PublishSymbols@2
  displayName: 'Publish symbols path'
  inputs:
    SearchPattern: '**\bin\**\*.pdb'
    PublishSymbols: false
  continueOnError: true

- task: CopyFiles@2
  displayName: 'Copy build files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**\bin\$(BuildConfiguration)\**'
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: CopyFiles@2
  displayName: 'Copy published files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: 'published\**'
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
